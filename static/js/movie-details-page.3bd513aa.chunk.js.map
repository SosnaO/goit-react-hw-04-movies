{"version":3,"sources":["components/MoviseApi.js","components/Cast.js","components/Reviews.js","components/views/MovieDetailsPage.js"],"names":["API_KEY","fetchTrendingMovies","a","axios","get","data","results","fetchMoviesByQuery","query","fetchMovies","movieId","fetchAboutActors","fetchReviews","Cast","useParams","useState","cast","setCast","useEffect","then","map","actor","className","styles","profile_path","src","alt","name","character","id","Reviews","reviews","setReviews","length","review","author","content","MovieDetailsPage","history","useHistory","location","useLocation","useRouteMatch","url","path","movie","setMovie","movieDetailsPage","button","onClick","push","state","from","poster_path","title","vote_average","overview","genres","genre","to"],"mappings":"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","file":"static/js/movie-details-page.3bd513aa.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '9060d75a42548d00033b78fc23f6dea4';\r\n\r\nconst fetchTrendingMovies = async () => {\r\n  const { data } = await axios\r\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\r\n  return data.results;\r\n};\r\n\r\nconst fetchMoviesByQuery = async query => {\r\n  const { data } = await axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1`\r\n    );\r\n  return data.results;\r\n};\r\n\r\nconst fetchMovies = async movieId => {\r\n  const { data } = await axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nconst fetchAboutActors = async movieId => {\r\n  const { data } = await axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\r\n    );\r\n  return data;\r\n};\r\n\r\nconst fetchReviews = async movieId => {\r\n  const { data } = await axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\r\n    );\r\n  return data;\r\n};\r\n\r\nexport {\r\n  fetchTrendingMovies,\r\n  fetchMoviesByQuery,\r\n  fetchMovies,\r\n  fetchAboutActors,\r\n  fetchReviews,\r\n};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchAboutActors } from './MoviseApi';\r\nimport styles from '../styles.module.css'\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchAboutActors(movieId).then(data => setCast(data.cast));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {cast &&\r\n        cast.map(actor => (\r\n          <li key={actor.id}  className={styles.cast}>\r\n            {actor.profile_path && (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\r\n                alt={actor.name}\r\n              />\r\n            )}\r\n            <p>{actor.name}</p>\r\n            <p>{actor.character}</p>\r\n          </li>\r\n        ))}\r\n    </>\r\n  );\r\n};","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchReviews } from './MoviseApi';\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchReviews(movieId).then(data => setReviews(data.results));\r\n  }, [movieId]);\r\n\r\n  if (reviews && reviews.length > 0) {\r\n    return (\r\n      <ul>\r\n        {reviews.map(review => (\r\n          <li key={review.id}>\r\n            <h3>{review.author}</h3>\r\n            <p>{review.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return <p>We don't have any reviews for this movie</p>;\r\n}\r\n","import { NavLink, Route, useRouteMatch } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, useHistory } from 'react-router';\r\nimport { fetchMovies } from '../MoviseApi';\r\nimport Cast from '../Cast';\r\nimport Reviews from '../Reviews';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovies(movieId).then(setMovie);\r\n  }, [movieId]);\r\n\r\n  const onGoBack = () => {\r\n    history.push(location?.state?.from ?? '/');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.movieDetailsPage}\r\n    >\r\n      <button className={styles.button} onClick={onGoBack}>Go Back</button>\r\n\r\n      {movie && (\r\n        <div>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n          <div>\r\n            <h1>{movie.title}</h1>\r\n            <p>User Score: {movie.vote_average * 10}%</p>\r\n\r\n            <h2>Overview</h2>\r\n            <p>{movie.overview}</p>\r\n\r\n            <h2>Genres</h2>\r\n            <p>{movie.genres.map(genre => `${genre.name} `)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <h3>Additional information</h3>\r\n        <ul>\r\n          <li>\r\n            <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <hr />\r\n        <Route path={`${path}/cast`}>\r\n          <Cast />\r\n        </Route>\r\n        <Route path={`${path}/reviews`}>\r\n          <Reviews />\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}