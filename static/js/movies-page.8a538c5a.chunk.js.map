{"version":3,"sources":["components/MoviseApi.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Searchbar/Searchbar.js","components/views/MoviesPage.js"],"names":["API_KEY","fetchTrendingMovies","a","axios","get","data","results","fetchMoviesByQuery","query","fetchMovies","movieId","fetchAboutActors","fetchReviews","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Searchbar","onSubmit","useState","setQuery","e","preventDefault","className","styles","searchForm","inputForm","type","autoComplete","autoFocus","onChange","queryValue","currentTarget","toLowerCase","trim","buttonForm","MoviesPage","history","useHistory","location","useLocation","url","useRouteMatch","queryMovies","URLSearchParams","search","moviesByQuery","setMoviesByQuery","error","setError","useEffect","then","map","movie","to","pathname","id","state","from","title"],"mappings":"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","file":"static/js/movies-page.8a538c5a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '9060d75a42548d00033b78fc23f6dea4';\r\n\r\nconst fetchTrendingMovies = async () => {\r\n  const { data } = await axios\r\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\r\n  return data.results;\r\n};\r\n\r\nconst fetchMoviesByQuery = async query => {\r\n  const { data } = await axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1`\r\n    );\r\n  return data.results;\r\n};\r\n\r\nconst fetchMovies = async movieId => {\r\n  const { data } = await axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nconst fetchAboutActors = async movieId => {\r\n  const { data } = await axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\r\n    );\r\n  return data;\r\n};\r\n\r\nconst fetchReviews = async movieId => {\r\n  const { data } = await axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\r\n    );\r\n  return data;\r\n};\r\n\r\nexport {\r\n  fetchTrendingMovies,\r\n  fetchMoviesByQuery,\r\n  fetchMovies,\r\n  fetchAboutActors,\r\n  fetchReviews,\r\n};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from 'react';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const queryValue = e.currentTarget.value.toLowerCase().trim();\r\n    setQuery(queryValue);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(query);\r\n\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={styles.searchForm}>\r\n        <input\r\n          className={styles.inputForm}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" className={styles.buttonForm}>\r\n          <span>Search</span>\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};","import { useState, useEffect } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { fetchMoviesByQuery } from '../MoviseApi';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\n\r\nexport default function MoviesPage() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { url } = useRouteMatch();\r\n  const queryMovies = new URLSearchParams(location.search).get('queryBy');\r\n  const [query, setQuery] = useState(queryMovies || '');\r\n  const [moviesByQuery, setMoviesByQuery] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n    fetchMoviesByQuery(query).then(setMoviesByQuery);\r\n  }, [query]);\r\n\r\n  const onChangeQuery = query => {\r\n    setQuery(query);\r\n    history.push({\r\n      ...location,\r\n      search: `queryBy=${query}`,\r\n    });\r\n    setMoviesByQuery(null);\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onChangeQuery} />\r\n\r\n      {error && <p>Sorry! Somethimg went wrong. Try again, please!</p>}\r\n\r\n      <ul>\r\n        {moviesByQuery &&\r\n          moviesByQuery.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `${url}/${movie.id}`,\r\n                  state: { from: location },\r\n                }}\r\n              >\r\n                {movie.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};"],"sourceRoot":""}